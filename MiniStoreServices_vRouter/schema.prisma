generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Customers {
  customer_id  Int      @id
  first_name   String   @db.VarChar(50)
  last_name    String   @db.VarChar(50)
  email        String?  @unique(map: "email") @db.VarChar(100)
  address      String?  @db.VarChar(255)
  phone_number String?  @db.VarChar(20)
  Orders       Orders[]
}

model OrderDetail {
  order_id   Int
  product_id Int
  quantity   Int
  unit_price Decimal  @db.Decimal(10, 2)
  Orders     Orders   @relation(fields: [order_id], references: [order_id], onDelete: NoAction, onUpdate: NoAction, map: "orderdetail_ibfk_1")
  Products   Products @relation(fields: [product_id], references: [product_id], onDelete: NoAction, onUpdate: NoAction, map: "orderdetail_ibfk_2")

  @@id([order_id, product_id])
  @@index([product_id], map: "product_id")
}

model Orders {
  order_id     Int                  @id
  customer_id  Int
  order_date   DateTime             @default(now()) @db.DateTime(0)
  order_status Orders_order_status?
  total_amount Decimal              @db.Decimal(10, 2)
  OrderDetail  OrderDetail[]
  Customers    Customers            @relation(fields: [customer_id], references: [customer_id], onDelete: NoAction, onUpdate: NoAction, map: "orders_ibfk_1")
  Payments     Payments[]

  @@index([customer_id], map: "customer_id")
}

model Payments {
  payment_id     Int                      @id @default(autoincrement())
  order_id       Int
  payment_method String?                  @db.VarChar(50)
  payment_date   DateTime?                @db.DateTime(0)
  amount         Decimal                  @db.Decimal(10, 2)
  remark         String?                  @db.VarChar(255)
  payment_status Payments_payment_status?
  Orders         Orders                   @relation(fields: [order_id], references: [order_id], onDelete: NoAction, onUpdate: NoAction, map: "payments_ibfk_1")

  @@index([order_id], map: "order_id")
}

model Products {
  product_id  Int           @id
  name        String        @db.VarChar(100)
  description String?       @db.Text
  price       Decimal       @db.Decimal(10, 2)
  category    String?       @db.VarChar(50)
  image_url   String?       @db.VarChar(255)
  OrderDetail OrderDetail[]
}

enum Orders_order_status {
  processing
  completed
  cancelled
}

enum Payments_payment_status {
  pending
  completed
  failed
}
